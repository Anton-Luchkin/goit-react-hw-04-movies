{"version":3,"sources":["servises/moviesApi.js","components/MoviesList/MoviesList.js","components/MoviesList/MoviesList.module.css","components/SearchForm/SearchForm.module.css","components/SearchForm/SearchForm.js","views/MoviesPage.js"],"names":["apiKey","fetchTrendMovies","Axios","get","then","response","data","results","fetchMovie","movieId","fetchCast","cast","fetchReviews","fetchMovies","searchQuery","withRouter","movies","location","className","s","moviesList","map","id","title","key","movieItem","to","pathname","routes","state","from","module","exports","SearchForm","query","handleChange","currentTarget","setState","value","handleSubmit","e","preventDefault","props","onSubmit","this","type","onChange","formInput","Component","MoviesPage","onChangeQuery","moviesApi","localStorage","getItem","parsedMovies","JSON","parse","prevProps","prevState","setItem","stringify","MoviesList"],"mappings":"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","file":"static/js/5.7cd797e3.chunk.js","sourcesContent":["import Axios from 'axios';\r\n\r\nconst apiKey = 'ef48f1b6dbfe0c59ea486f054eb37e66';\r\n\r\nconst fetchTrendMovies = () => {\r\n   return (\r\n      Axios.get(`https://api.themoviedb.org/3/trending/movie/week?api_key=${apiKey}`).then(response => response.data.results)\r\n   )\r\n};\r\n\r\nconst fetchMovie = ({ movieId }) => {\r\n   return (\r\n      Axios.get(`https://api.themoviedb.org/3/movie/${movieId}?api_key=${apiKey}&language=en-US`).then(response => response.data)\r\n   )\r\n};\r\n\r\nconst fetchCast = ({ movieId }) => {\r\n   return (\r\n      Axios.get(`https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${apiKey}`).then(response => response.data.cast)\r\n   )\r\n};\r\n\r\nconst fetchReviews = ({ movieId }) => {\r\n   return (\r\n      Axios.get(`https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${apiKey}&language=en-US&page=1`).then(response => response.data.results)\r\n   )\r\n};\r\n\r\nconst fetchMovies = ({ searchQuery }) => {\r\n   return (\r\n      Axios.get(`https://api.themoviedb.org/3/search/movie?api_key=${apiKey}&language=en-US&query=${searchQuery}&page=1&include_adult=false`).then(response => response.data.results)\r\n   )\r\n};\r\n\r\nexport default { fetchTrendMovies, fetchMovie, fetchCast, fetchReviews, fetchMovies };\r\n\r\n","import React from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport routes from '../../routes';\r\n\r\nimport s from './MoviesList.module.css';\r\n\r\n\r\nfunction MoviesList({ movies, location }) {\r\n   return (\r\n      <ul className={s.moviesList}>{movies.map(({ id, title }) => (\r\n         <li key={id}>\r\n            <Link\r\n               className={s.movieItem}\r\n               to={{\r\n                  pathname: `${routes.movies}/${id}`,\r\n                  state: { from: location },\r\n               }}>\r\n               {title}\r\n            </Link>\r\n         </li>))\r\n      }\r\n      </ul >\r\n   )\r\n}\r\n\r\nMoviesList.propTypes = {\r\n   movies: PropTypes.arrayOf(PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      title: PropTypes.string.isRequired\r\n   })).isRequired,\r\n   location: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default withRouter(MoviesList);\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"moviesList\":\"MoviesList_moviesList__2U-MY\",\"movieItem\":\"MoviesList_movieItem__3K6u_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formInput\":\"SearchForm_formInput__2-aQR\"};","import React, { Component } from 'react'\r\n\r\nimport s from './SearchForm.module.css';\r\n\r\nexport class SearchForm extends Component {\r\n   state = {\r\n      query: '',\r\n   };\r\n\r\n   handleChange = ({ currentTarget }) => {\r\n      this.setState({ query: currentTarget.value });\r\n   };\r\n\r\n   handleSubmit = e => {\r\n      const { query } = this.state;\r\n\r\n      e.preventDefault();\r\n\r\n      this.props.onSubmit(query);\r\n      this.setState({ query: '' });\r\n   };\r\n\r\n   render() {\r\n      const { query } = this.state;\r\n\r\n      return (\r\n         <form onSubmit={this.handleSubmit} >\r\n            <input\r\n               type='text'\r\n               value={query}\r\n               onChange={this.handleChange}\r\n               className={s.formInput}\r\n            />\r\n            <button type=\"submit\">Search</button>\r\n         </form>\r\n      )\r\n   }\r\n}\r\n\r\nexport default SearchForm\r\n","import React, { Component } from 'react';\r\n\r\nimport SearchForm from '../components/SearchForm/SearchForm';\r\nimport MoviesList from '../components/MoviesList/MoviesList';\r\n\r\nimport moviesApi from '../servises/moviesApi';\r\n\r\nexport class MoviesPage extends Component {\r\n   state = {\r\n      searchQuery: '',\r\n      movies: [],\r\n   }\r\n\r\n   componentDidMount() {\r\n      const movies = localStorage.getItem('movies');\r\n      const parsedMovies = JSON.parse(movies);\r\n\r\n      if (parsedMovies) {\r\n         this.setState({ movies: parsedMovies });\r\n      }\r\n   }\r\n\r\n   componentDidUpdate(prevProps, prevState) {\r\n      const { searchQuery, movies } = this.state;\r\n\r\n      if (searchQuery !== prevState.searchQuery) {\r\n         this.fetchMovies(searchQuery);\r\n      }\r\n\r\n      if (movies !== prevState.movies) {\r\n         localStorage.setItem('movies', JSON.stringify(movies));\r\n      }\r\n   }\r\n\r\n   onChangeQuery = query => {\r\n      this.setState({\r\n         searchQuery: query,\r\n         movies: [],\r\n      });\r\n   };\r\n\r\n   fetchMovies = searchQuery => {\r\n      moviesApi.fetchMovies({ searchQuery }).then(results => this.setState({ movies: results }));\r\n   }\r\n\r\n   render() {\r\n      const { movies } = this.state;\r\n\r\n      return (\r\n         <>\r\n            <SearchForm onSubmit={this.onChangeQuery} />\r\n            <MoviesList movies={movies} />\r\n         </>\r\n      )\r\n   }\r\n}\r\n\r\nexport default MoviesPage\r\n"],"sourceRoot":""}